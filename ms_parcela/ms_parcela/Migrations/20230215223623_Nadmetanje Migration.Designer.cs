// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ms_parcela.Database;

#nullable disable

namespace msparcela.Migrations
{
    [DbContext(typeof(AuctionLandAPIContext))]
    [Migration("20230215223623_Nadmetanje Migration")]
    partial class NadmetanjeMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ms_parcela.Entities.DeoParceleE.DeoParcele", b =>
                {
                    b.Property<Guid>("deoParceleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("NadmetanjeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("brojKatastraskaOpstina")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("brojParcele")
                        .HasColumnType("int");

                    b.Property<int>("povrsinaDelaParcele")
                        .HasColumnType("int");

                    b.Property<int>("redniBrojDelaParcele")
                        .HasColumnType("int");

                    b.HasKey("deoParceleID");

                    b.ToTable("DeoParceles");

                    b.HasData(
                        new
                        {
                            deoParceleID = new Guid("5246b697-b7d6-4715-8518-fc114930e596"),
                            brojKatastraskaOpstina = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            brojParcele = 1,
                            povrsinaDelaParcele = 200,
                            redniBrojDelaParcele = 3
                        },
                        new
                        {
                            deoParceleID = new Guid("7b3a9624-bcc2-4d1a-9e40-f05a771cbf15"),
                            brojKatastraskaOpstina = new Guid("0f8fad5b-d9cb-469f-a165-70867728950e"),
                            brojParcele = 1,
                            povrsinaDelaParcele = 200,
                            redniBrojDelaParcele = 4
                        });
                });

            modelBuilder.Entity("ms_parcela.Entities.KatastarskaOpstina", b =>
                {
                    b.Property<Guid>("brojKatastarskeOpstine")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nazivKatastarskeOpstine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("brojKatastarskeOpstine");

                    b.ToTable("KatastarskaOpstinas");

                    b.HasData(
                        new
                        {
                            brojKatastarskeOpstine = new Guid("f317cb93-c130-4258-bc47-9542bfc349f5"),
                            nazivKatastarskeOpstine = "Cantavir"
                        },
                        new
                        {
                            brojKatastarskeOpstine = new Guid("c483e893-eb84-4f5b-93ea-b73050556570"),
                            nazivKatastarskeOpstine = "Bajmok"
                        });
                });

            modelBuilder.Entity("ms_parcela.Entities.ParcelaE.Parcela", b =>
                {
                    b.Property<Guid>("brojKatastraskaOpstina")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("brojParcele")
                        .HasColumnType("int");

                    b.Property<string>("klasa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("kultura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("oblikSvojine")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("obradivost")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("odvodnjavanje")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("povrsina")
                        .HasColumnType("int");

                    b.HasKey("brojKatastraskaOpstina", "brojParcele");

                    b.ToTable("Parcelas");
                });

            modelBuilder.Entity("ms_parcela.Entities.Zona", b =>
                {
                    b.Property<Guid>("zonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("brojZona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("zonaID");

                    b.ToTable("Zonas");

                    b.HasData(
                        new
                        {
                            zonaID = new Guid("8176dcc9-6563-4e20-8c56-f110b1ee98ab"),
                            brojZona = "zona3"
                        },
                        new
                        {
                            zonaID = new Guid("3558643f-1476-4d2c-9550-456fc50334ca"),
                            brojZona = "zona4"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
